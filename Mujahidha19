# Step 0: Import Libraries
import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import classification_report, confusion_matrix, roc_auc_score, roc_curve
import warnings
warnings.filterwarnings('ignore')

# Step 1: Data Description (Manual dataset)
data = {
    'Age': [25, 45, 35, 52, 23, 40, 60, 33, 29, 48],
    'BMI': [22.5, 27.8, 30.1, 24.3, 28.0, 31.2, 26.5, 29.0, 23.4, 35.6],
    'Glucose': [85, 140, 100, 130, 95, 160, 120, 110, 90, 180],
    'BloodPressure': [70, 80, 75, 88, 72, 90, 85, 78, 76, 92],
    'Diabetes': [0, 1, 0, 1, 0, 1, 1, 0, 0, 1]
}
df = pd.DataFrame(data)

print("Step 1: Data Description")
print(df.head())
print("\nSummary:")
print(df.describe())

# Step 2: Data Preprocessing
X = df.drop('Diabetes', axis=1)
y = df['Diabetes']

# Feature scaling
scaler = StandardScaler()
X_scaled = scaler.fit_transform(X)

# Step 3: Exploratory Data Analysis (basic)
print("\nStep 3: Exploratory Data Analysis")
sns.pairplot(df, hue='Diabetes')
plt.show()

sns.heatmap(df.corr(), annot=True, cmap='coolwarm')
plt.title("Feature Correlation Heatmap")
plt.show()

# Step 4: Feature Engineering
# Example: create a synthetic risk score
df['RiskScore'] = df['BMI'] * df['Glucose'] / 100
X = df[['A
